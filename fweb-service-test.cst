<%-- 
Name:
Author: 成七一
Description:Service Class GENERATE TEMPLATE FOR FWEB（FOREVER WEB RAPID FRAMEWORK）
CreateTime：2014年7月17日 13:43:50
--%>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="System" %>
<%@ Import Namespace="System" %>
<%@ Map Name="JavaAlias" Src="mysql-java-alias" %>

<%@ Template Language="C#" TargetLanguage="Java" %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Database" Description="只能选择一个表." %>
<%@ Property Name="NameSpace" Type="System.String" Category="Context" Default="org.hhwy.fweb1" %>
<%@ Property Name="Author" Type="System.String" Category="Context" Default="cqiyi" %>
package <%=NameSpace%>.test;

import java.util.List;
import <%=NameSpace%>.BaseJUnit4TestCase;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import <%=NameSpace%>.service.<%=GetDomainClassName()%>Service;
import <%=NameSpace%>.domain.<%=GetDomainClassName()%>;

public class <%=GetDomainClassName()%>ServiceTest extends BaseJUnit4TestCase {

	@Autowired
	private <%=GetDomainClassName()%>Service service;
    
    @Test
    public void insertTest() {
        <%=GetDomainClassName()%> obj = this.getRandomDomain();
        service.insert(obj);
        System.out.println("已插入：" + obj);
    }
    
    
    @Test
    public void updateTest() {
        <%=GetDomainClassName()%> obj0 = this.getRandomDomain();
        service.insert(obj0);
        System.out.println("已插入：" + obj0);
        
		<%=GetDomainClassName()%> obj1 = service.get(obj0.getId());
        //获取到的obj对象
        System.out.println("已获取：" + obj1);
        
        service.update(obj1);
		<%=GetDomainClassName()%> obj2 = service.get(obj1.getId());
        System.out.println("更新后：" + obj2);
        
    }
    
    
    @Test
    public void deleteTest() {
        <%=GetDomainClassName()%> obj = this.getRandomDomain();
        service.insert(obj);
        System.out.println("已插入：" + obj);
		service.delete(obj.getId());
    }
    
    @Test
    public void getTest() {
		int objectCount = this.getRandomInt();
		for (int i = 0; i < objectCount; i++) {
            service.insert(this.getRandomDomain());
        }
        
        System.out.println("所有：");
		List<<%=GetDomainClassName()%>> list = service.getAll();
		for (<%=GetDomainClassName()%> obj : list) {
			System.out.println(obj);
		}
        
        System.out.println("总行数：" + service.getRowCount());
        
        service.getAllPaged(1, 3);
        System.out.println("分页：" + service.getAllPaged(1, 3).size());
    }
    
    
    
    private <%=GetDomainClassName()%> getRandomDomain(){    
		<%=GetDomainClassName()%> obj = new <%=GetDomainClassName()%>();
        <%foreach(ColumnSchema col in SourceTable.Columns){%>   
        <%if( Ignored(col) ) {  continue; }%>
        obj.set<%=StringUtil.ToPascalCase(col.Name)%>(this.getRandom<%=GetJavaType(col)%>());
        <%}%>
        
        return obj;
    }

}

<script runat="template">
    public override string GetFileName() {
        return GetDomainClassName() + "Test.java";
    }
    
    public bool Ignored(ColumnSchema col){
        string ignored = "/id/version/id/create_time/update_time/status/";
        string cn = "/" + col.Name.ToLower() + "/";
        return ignored.IndexOf(cn) >= 0;
    }
    
    public string GetDomainClassName() {
        return StringUtil.ToPascalCase(SourceTable.Name.TrimStart("t_".ToCharArray()));
    }
    
    public string GetDomainVariableName() {
        return StringUtil.ToCamelCase(SourceTable.Name.TrimStart("t_".ToCharArray()));
    }
    
    public string GetJavaType(ColumnSchema col) {
        try{
            return StringUtil.ToPascalCase(JavaAlias[col.NativeType]);
        }catch(Exception ex){
            return col.NativeType + "[N/A]";
        }
    }
</script>